{"version":3,"sources":["theme/GlobalStyle.js","theme/mainTheme.js","components/atoms/Heading.js","components/atoms/Paragraph.js","components/molecules/Header.js","components/molecules/Figure.js","components/molecules/WrongLetters.js","components/molecules/Word.js","components/atoms/Notification.js","components/organisms/Popup.js","components/helpers/index.js","components/organisms/GameContainer.js","components/MainView.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","white","grey100","grey200","grey300","black","light","bold","fontFamilySecondary","fontSize","xxs","xs","s","m","l","xl","Heading","styled","h1","Paragraph","p","StyledWrapper","div","Header","StyledSvg","svg","Figure","errors","height","width","x1","y1","x2","y2","length","cx","cy","r","StyledSpan","span","WrongLetters","wrongLetters","map","letter","key","Word","word","correctLetters","split","index","includes","props","show","css","StyledParagraph","Notification","StyledContainer","StyledButton","button","Popup","result","playAgain","onClick","showNotification","setter","setTimeout","checkWin","wordArray","forEach","words","Math","floor","random","GameContainer","useState","playable","setPlayable","setCorrectLetters","setWrongLetters","setShowNotification","setResult","play","res","useEffect","handleKeydown","e","keyCode","toLowerCase","window","addEventListener","removeEventListener","MainView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194f6be9.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n   \r\n    *,*::before,*::after {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n         -moz-osx-font-smoothing: grayscale;\r\n         margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    html {\r\n        font-size: 62.5%;\r\n    }\r\n\r\n    body {\r\n        font-family: \"Montserrat\", sans-serif;\r\n        font-size: 1.6rem;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  white: \"#ffffff\",\r\n  grey100: \"hsl(0, 0%, 96%)\",\r\n  grey200: \"hsl(0, 0%, 90%)\",\r\n  grey300: \"hsl(0, 0%, 60%)\",\r\n  black: \"#080707\",\r\n  light: 300,\r\n  bold: 500,\r\n  fontFamilySecondary: '\"Walter Turncoat\", cursive',\r\n  fontSize: {\r\n    xxs: \"1rem\",\r\n    xs: \"1.2rem\",\r\n    s: \"1.6rem\",\r\n    m: \"2.1rem\",\r\n    l: \"2.4rem\",\r\n    xl: \"4rem\",\r\n  },\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Heading = styled.h1`\r\n  color: ${({ theme }) => theme.grey200};\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from \"styled-components\";\r\n\r\nconst Paragraph = styled.p`\r\n  color: ${({ theme }) => theme.grey200};\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: ${({ theme }) => theme.light};\r\n  padding: 15px;\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../atoms/Heading\";\r\nimport Paragraph from \"../atoms/Paragraph\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledWrapper>\r\n      <Heading>HANGMAN</Heading>\r\n      <Paragraph>Find hidden word! Enter a letter</Paragraph>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSvg = styled.svg`\r\n  fill: transparent;\r\n  stroke: #fff;\r\n  stroke-width: 4px;\r\n  stroke-linecap: round;\r\n`;\r\n\r\nconst Figure = ({ errors }) => {\r\n  return (\r\n    <StyledSvg height=\"250\" width=\"200\">\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {errors.length > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n      {errors.length > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n      {errors.length > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n      {errors.length > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n      {errors.length > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n      {errors.length > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n    </StyledSvg>\r\n  );\r\n};\r\n\r\nexport default Figure;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"../atoms/Paragraph\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  right: 200px;\r\n  margin-left: 200px;\r\n  border: 1px solid ${({ theme }) => theme.grey300};\r\n  padding: 10px;\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  width: 40px;\r\n  height: 40px;\r\n  text-align: center;\r\n  margin: 0 10px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.white};\r\n  color: ${({ theme }) => theme.white};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-family: ${({ theme }) => theme.fontFamilySecondary};\r\n`;\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <>\r\n      {wrongLetters.length > 0 && (\r\n        <StyledWrapper>\r\n          <Paragraph>Wrong letters:</Paragraph>\r\n          {wrongLetters.map((letter) => (\r\n            <StyledSpan key={letter}>{letter}</StyledSpan>\r\n          ))}\r\n        </StyledWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WrongLetters;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  width: 40px;\r\n  height: 40px;\r\n  align-self: center;\r\n  text-align: center;\r\n  margin: 0 10px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.white};\r\n  color: ${({ theme }) => theme.white};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-family: ${({ theme }) => theme.fontFamilySecondary};\r\n`;\r\n\r\nconst Word = ({ word, correctLetters }) => {\r\n  return (\r\n    <StyledWrapper>\r\n      {word.split(\"\").map((letter, index) => (\r\n        <StyledSpan key={index}>\r\n          {correctLetters.includes(letter) ? letter : \"\"}\r\n        </StyledSpan>\r\n      ))}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport Paragraph from \"../atoms/Paragraph\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -50px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 10px 10px 0 0;\r\n  margin: 0 auto;\r\n  background-color: ${({ theme }) => theme.grey300};\r\n  transition: transform 0.4s ease-in-out;\r\n\r\n  ${(props) =>\r\n    props.show &&\r\n    css`\r\n      transform: translate(-50%, -50px);\r\n    `}\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.black};\r\n`;\r\n\r\nconst Notification = ({ show }) => {\r\n  return (\r\n    <StyledWrapper show={show}>\r\n      <StyledParagraph>You have already checked this letter!</StyledParagraph>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"../atoms/Paragraph\";\r\n\r\nconst StyledContainer = styled.div`\r\n  background-color: hsla(0, 0%, 60%, 0.8);\r\n  width: 100vw;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 60px 100px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 5px ${({ theme }) => theme.grey200};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: ${({ theme }) => theme.black};\r\n`;\r\nconst StyledParagraph = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-family: ${({ theme }) => theme.fontFamilySecondary};\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background-color: ${({ theme }) => theme.grey200};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: ${({ theme }) => theme.black};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  letter-spacing: 1px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Popup = ({ result, playAgain }) => {\r\n  return (\r\n    <StyledContainer>\r\n      <StyledWrapper>\r\n        <StyledParagraph>{`You ${result}`}</StyledParagraph>\r\n        <StyledButton onClick={playAgain}>Play Again!</StyledButton>\r\n      </StyledWrapper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","export const showNotification = (setter) => {\r\n  setter(true);\r\n  setTimeout(() => setter(false), 2000);\r\n};\r\n\r\nexport const checkWin = (correctLetters, wrongLetters, word) => {\r\n  const wordArray = word.split(\"\");\r\n  let result = \"won\";\r\n\r\n  wordArray.forEach((letter) => {\r\n    if (!correctLetters.includes(letter)) {\r\n      result = \"\";\r\n    }\r\n  });\r\n\r\n  if (wrongLetters.length === 6) {\r\n    result = \"lost\";\r\n  }\r\n  return result;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Figure from \"../molecules/Figure\";\r\nimport WrongLetters from \"../molecules/WrongLetters\";\r\nimport Word from \"../molecules/Word\";\r\nimport Notification from \"../atoms/Notification\";\r\nimport Popup from \"./Popup\";\r\nimport { showNotification as show, checkWin } from \"../helpers\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst words = [\r\n  \"react\",\r\n  \"components\",\r\n  \"veganism\",\r\n  \"frontend\",\r\n  \"backend\",\r\n  \"programming\",\r\n  \"vanilla\",\r\n  \"javascript\",\r\n];\r\n\r\nlet word = words[Math.floor(Math.random() * words.length)];\r\n\r\nconst GameContainer = () => {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  let play = true;\r\n  let res = \"\";\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = (e) => {\r\n      const { key, keyCode } = e;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (word.includes(letter) && !correctLetters.includes(letter)) {\r\n          setCorrectLetters((correctLetters) => [...correctLetters, letter]);\r\n        } else if (word.includes(letter) && correctLetters.includes(letter)) {\r\n          show(setShowNotification);\r\n        } else if (!wrongLetters.includes(letter)) {\r\n          setWrongLetters((wrongLetters) => [...wrongLetters, letter]);\r\n        } else {\r\n          show(setShowNotification);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\r\n  }, [playable, wrongLetters, correctLetters]);\r\n\r\n  useEffect(() => {\r\n    setPlayable(play);\r\n    setResult(res);\r\n  });\r\n\r\n  if (checkWin(correctLetters, wrongLetters, word) === \"won\") {\r\n    res = \"won\";\r\n    play = false;\r\n  } else if (checkWin(correctLetters, wrongLetters, word) === \"lost\") {\r\n    res = \"lost\";\r\n    play = false;\r\n  }\r\n\r\n  const playAgain = () => {\r\n    setPlayable(true);\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n    setResult([]);\r\n\r\n    word = words[Math.floor(Math.random() * words.length)];\r\n  };\r\n  return (\r\n    <>\r\n      <StyledWrapper>\r\n        <Figure errors={wrongLetters} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n      </StyledWrapper>\r\n      <StyledWrapper>\r\n        <Word word={word} correctLetters={correctLetters} />\r\n      </StyledWrapper>\r\n      <Notification show={showNotification ? \"show\" : \"\"} />\r\n      {!playable && <Popup result={result} playAgain={playAgain} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/molecules/Header\";\r\nimport GameContainer from \"../components/organisms/GameContainer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: ${({ theme }) => theme.black};\r\n`;\r\n\r\nconst MainView = () => {\r\n  return (\r\n    <StyledWrapper>\r\n      <Header />\r\n      <GameContainer />\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport GlobalStyle from \"./theme/GlobalStyle\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme/mainTheme\";\r\nimport MainView from \"./components/MainView\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/* <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Hangman</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&family=Walter+Turncoat&display=swap\"\r\n        />\r\n      </Helmet> */}\r\n      <GlobalStyle />\r\n      <ThemeProvider theme={theme}>\r\n        <MainView />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}